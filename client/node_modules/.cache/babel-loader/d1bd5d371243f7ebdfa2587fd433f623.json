{"ast":null,"code":"var _jsxFileName = \"/Users/peng2017/Desktop/training/react/streamer/client/src/components/streams/StreamCreate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formValues => {\n      this.props.createStream(formValues);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      className: \"ui form error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"title\",\n      component: this.renderInput,\n      label: \"Enter Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"description\",\n      component: this.renderInput,\n      label: \"Enter Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"must enter a description\";\n  }\n\n  return errors;\n};\n\nconst formWrapped = reduxForm({\n  form: 'StreamCreate',\n  validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream\n})(formWrapped);","map":{"version":3,"sources":["/Users/peng2017/Desktop/training/react/streamer/client/src/components/streams/StreamCreate.js"],"names":["React","connect","createStream","StreamForm","StreamCreate","Component","onSubmit","formValues","props","render","handleSubmit","renderInput","validate","errors","title","description","formWrapped","reduxForm","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA0C;AAAA;AAAA;;AAAA,SAI1CC,QAJ0C,GAI/BC,UAAU,IAAK;AAC1B,WAAKC,KAAL,CAAWN,YAAX,CAAwBK,UAAxB;AACC,KANyC;AAAA;;AAOtCE,EAAAA,MAAM,GAAE;AAGR,wBACI;AAAM,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,YAAX,CAAwB,KAAKJ,QAA7B,CAAhB;AAAyD,MAAA,SAAS,EAAC,eAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAE,KAAKK,WAApC;AAAiD,MAAA,KAAK,EAAG,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,MAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CADJ;AAOC;;AAjBqC;;AAoB1C,MAAMC,QAAQ,GAAGL,UAAU,IAAI;AAE3B,QAAMM,MAAM,GAAE,EAAd;;AAEA,MAAG,CAACN,UAAU,CAACO,KAAf,EAAqB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAa,oBAAb;AACH;;AAED,MAAG,CAACP,UAAU,CAACQ,WAAf,EAA2B;AAEvBF,IAAAA,MAAM,CAACE,WAAP,GAAmB,0BAAnB;AACH;;AAED,SAAOF,MAAP;AAIH,CAjBD;;AAmBA,MAAMG,WAAW,GAAGC,SAAS,CAAC;AAC1BC,EAAAA,IAAI,EAAE,cADoB;AACLN,EAAAA;AADK,CAAD,CAAT,CAEjBR,YAFiB,CAApB;AAIA,eAAeH,OAAO,CAAE,IAAF,EAAQ;AAACC,EAAAA;AAAD,CAAR,CAAP,CAAgCc,WAAhC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {createStream} from '../../actions';\nimport StreamForm from './StreamForm';\n\nclass StreamCreate extends React.Component{\n\n\n\nonSubmit = formValues =>  {\nthis.props.createStream(formValues);\n}\n    render(){\n\n\n    return (\n        <form onSubmit={this.props.handleSubmit(this.onSubmit) } className=\"ui form error\">\n            <Field name=\"title\" component={this.renderInput} label = \"Enter Title\"/>\n            <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\n            <button className=\"ui button primary\">Submit</button>\n        </form>\n    )\n    }\n}\n\nconst validate = formValues => {\n\n    const errors= {};\n\n    if(!formValues.title){\n        errors.title=\"must enter a title\";\n    }\n\n    if(!formValues.description){\n\n        errors.description=\"must enter a description\";\n    }\n\n    return errors;\n\n\n\n}\n\nconst formWrapped = reduxForm({\n    form: 'StreamCreate',validate\n})(StreamCreate);\n\nexport default connect (null, {createStream}) (formWrapped);"]},"metadata":{},"sourceType":"module"}