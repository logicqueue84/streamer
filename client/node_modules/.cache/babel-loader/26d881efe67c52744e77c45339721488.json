{"ast":null,"code":"var _jsxFileName = \"/Users/peng2017/Desktop/training/react/streamer/client/src/components/streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }\n    }, \"selected \");\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/Users/peng2017/Desktop/training/react/streamer/client/src/components/streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","Component","componentDidMount","props","match","params","id","render","console","log","mapStateToProps","state","ownProps","stream","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,WAAR,QAA0B,eAA1B;;AACA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AAExCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,wBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA;AAMH;;AAduC;;AAkBvC;;AACD,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAOC,QAAP,KAAmB;AAC3C,SAAO;AAACC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcF,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACC,CAFD;;AAGA,eAAeR,OAAO,CAACY,eAAD,EAAiB;AAACX,EAAAA;AAAD,CAAjB,CAAP,CAAuCC,UAAvC,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nimport {fetchStream} from '../../actions';\nclass StreamEdit extends React.Component{\n\ncomponentDidMount(){\n    this.props.fetchStream(this.props.match.params.id);\n}\n\nrender(){ \n    console.log(this.props);\n    return (\n\n    <div>selected </div>\n)\n    \n    \n};   \n    \n    \n\n};\nconst mapStateToProps = (state,ownProps) =>{\nreturn {stream: state.streams[ownProps.match.params.id]}\n};\nexport default connect(mapStateToProps,{fetchStream})(StreamEdit);"]},"metadata":{},"sourceType":"module"}