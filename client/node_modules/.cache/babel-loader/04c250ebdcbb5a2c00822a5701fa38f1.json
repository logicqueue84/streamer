{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nimport history from '../history';\nimport streams from '../apis/streams';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth; //console.log(\"extracted user id \"+ userId);\n\n  const response = await streams.post('/streams', { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  const response = await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/peng2017/Desktop/training/react/streamer/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","history","streams","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QASO,SATP;AAUA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAGA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAE5B,SAAO;AACHC,IAAAA,IAAI,EAAEX,OADH;AAEHY,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAKH,CAPM;AASP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAEzB,SAAO;AACHF,IAAAA,IAAI,EAAEV;AADH,GAAP;AAIH,CANM;AAQP,OAAO,MAAMa,YAAY,GAAGC,UAAU,IAAI,OAAOC,QAAP,EAAgBC,QAAhB,KAA6B;AACrE,QAAM;AAACP,IAAAA;AAAD,MAAWO,QAAQ,GAAGC,IAA5B,CADqE,CAErE;;AACC,QAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,IAAR,CAAa,UAAb,EAAyB,EAAC,GAAGL,UAAJ;AAAgBL,IAAAA;AAAhB,GAAzB,CAAvB;AAEAM,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAET,aAAP;AAAsBU,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACAd,EAAAA,OAAO,CAACe,IAAR,CAAa,GAAb;AACF,CAPM;AASP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAEhD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACgB,GAAR,CAAY,UAAZ,CAAvB;AAEAR,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAER,aAAP;AAAsBS,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACF,CALK;AAON,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AAElD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACgB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEP,YAAP;AAAqBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACF,CALM;AAOP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAIX,UAAJ,KAAmB,MAAMC,QAAN,IAAkB;AAE5D,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACoB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BX,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEL,WAAP;AAAoBM,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACF,CALM;AAOP,OAAO,MAAMQ,YAAY,GAAIH,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AAEnD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACsB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAvB;AAEAV,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEN,aAAP;AAAsBO,IAAAA,OAAO,EAAEc;AAA/B,GAAD,CAAR;AACF,CALM","sourcesContent":["import {\n    SIGN_IN, \n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n\n} from './types';\nimport history from '../history';\nimport streams from '../apis/streams';\n\n\nexport const signIn = userId => {\n\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n\n};\n\nexport const signOut = () => {\n\n    return {\n        type: SIGN_OUT\n    };\n\n};\n\nexport const createStream = formValues => async (dispatch,getState) => {\n  const {userId} = getState().auth;\n  //console.log(\"extracted user id \"+ userId);\n   const response = await streams.post('/streams', {...formValues, userId});\n\n   dispatch({type: CREATE_STREAM, payload: response.data});\n   history.push('/');\n};\n\nexport const fetchStreams = () => async dispatch => {\n  \n    const response = await streams.get('/streams');\n \n    dispatch({type: FETCH_STREAMS, payload: response.data});\n };\n\n export const fetchStream = (id) => async dispatch => {\n  \n    const response = await streams.get(`/streams/${id}`);\n \n    dispatch({type: FETCH_STREAM, payload: response.data});\n };\n\n export const editStream = (id,formValues) => async dispatch => {\n  \n    const response = await streams.put(`/streams/${id}`, formValues);\n \n    dispatch({type: EDIT_STREAM, payload: response.data});\n };\n\n export const deleteStream = (id) => async dispatch => {\n  \n    const response = await streams.delete(`/streams/${id}`);\n \n    dispatch({type: DELETE_STREAM, payload: id});\n };"]},"metadata":{},"sourceType":"module"}