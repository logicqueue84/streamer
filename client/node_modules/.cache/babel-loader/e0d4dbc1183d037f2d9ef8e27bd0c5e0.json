{"ast":null,"code":"var _jsxFileName = \"/Users/peng2017/Desktop/training/react/streamer/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { fetchStream, deleteStream } from '../../actions';\nimport Modal from '../Modal';\nimport history from '../../history';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.deleteStream(this.props.match.params.id),\n      className: \"ui button negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"ui button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, \"Cancel\"));\n  }\n\n  renderContent() {\n    if (!this.props.stream) {\n      return 'Are you sure you want to delete this stream?';\n    }\n\n    return `Are you sure you want to delete stream with title ${this.props.stream.title}`;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      title: \"Delete Stream\",\n      content: this.renderContent(),\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream,\n  deleteStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/peng2017/Desktop/training/react/streamer/client/src/components/streams/StreamDelete.js"],"names":["React","connect","Link","fetchStream","deleteStream","Modal","history","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","renderContent","stream","title","render","push","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,WAAR,EAAqBC,YAArB,QAAwC,eAAxC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAIA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AAG3CC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKC,KAAL,CAAWP,WAAX,CAAuB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAGAC,EAAAA,aAAa,GAAE;AACf,wBACE,uDACC;AAAQ,MAAA,OAAO,EAAE,MAAI,KAAKJ,KAAL,CAAWN,YAAX,CAAwB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAhD,CAArB;AAAyE,MAAA,SAAS,EAAC,oBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,GAAV;AAAc,MAAA,SAAS,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,CADF;AAOA;;AACDE,EAAAA,aAAa,GAAE;AACX,QAAG,CAAC,KAAKL,KAAL,CAAWM,MAAf,EAAsB;AAClB,aAAO,8CAAP;AACH;;AAED,WAAQ,qDAAoD,KAAKN,KAAL,CAAWM,MAAX,CAAkBC,KAAM,EAApF;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBAEI,oBAAC,KAAD;AACA,MAAA,KAAK,EAAC,eADN;AAEA,MAAA,OAAO,EAAE,KAAKH,aAAL,EAFT;AAGA,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHT;AAIA,MAAA,SAAS,EAAE,MAAIR,OAAO,CAACa,IAAR,CAAa,GAAb,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ;AAWH;;AArC0C;;AAuC3C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAEzC,SAAO;AAACN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACX,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAT,GAAP;AACH,CAHD;;AAMA,eAAeZ,OAAO,CAACmB,eAAD,EAAkB;AAACjB,EAAAA,WAAD;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CAAqDG,YAArD,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {fetchStream, deleteStream} from '../../actions'\nimport Modal from '../Modal'\nimport history from '../../history';\n\n\n\nclass StreamDelete extends React.Component {\n\n\ncomponentDidMount (){\n\n    this.props.fetchStream(this.props.match.params.id)\n}\n\n\n renderActions(){\n return(\n   <>\n    <button onClick={()=>this.props.deleteStream(this.props.match.params.id)}className=\"ui button negative\">Delete</button>\n    <Link to={\"/\"}className=\"ui button\">Cancel</Link>\n    </>\n);\n\n}\nrenderContent(){\n    if(!this.props.stream){\n        return 'Are you sure you want to delete this stream?'\n    }\n\n    return `Are you sure you want to delete stream with title ${this.props.stream.title}`\n}\nrender(){\n    return (\n      \n        <Modal\n        title=\"Delete Stream\"\n        content={this.renderContent()}\n        actions={this.renderActions()}\n        onDismiss={()=>history.push('/')}\n        />\n       \n    );\n\n}\n}\nconst mapStateToProps = (state, ownProps) => {\n\n    return {stream: state.streams[ownProps.match.params.id]}\n};\n\n\nexport default connect(mapStateToProps, {fetchStream,deleteStream})(StreamDelete);"]},"metadata":{},"sourceType":"module"}