{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAMS, FETCH_STREAM, DELETE_STREAM, EDIT_STREAM } from './types';\nimport streams from '../apis/streams';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async dispatch => {\n  const {\n    userId\n  } = getState().auth; //console.log(\"extracted user id \"+ userId);\n\n  const response = await streams.post('/streams', formValues);\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get('/streams');\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  const response = await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/peng2017/Desktop/training/react/streamer/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAMS","FETCH_STREAM","DELETE_STREAM","EDIT_STREAM","streams","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,aAJJ,EAKIC,YALJ,EAMIC,aANJ,EAOIC,WAPJ,QASO,SATP;AAUA,OAAOC,OAAP,MAAoB,iBAApB;AAGA,OAAO,MAAMC,MAAM,GAAGC,MAAM,IAAI;AAE5B,SAAO;AACHC,IAAAA,IAAI,EAAEV,OADH;AAEHW,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAKH,CAPM;AASP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAEzB,SAAO;AACHF,IAAAA,IAAI,EAAET;AADH,GAAP;AAIH,CANM;AAQP,OAAO,MAAMY,YAAY,GAAGC,UAAU,IAAI,MAAOC,QAAP,IAAoB;AAC5D,QAAM;AAACN,IAAAA;AAAD,MAAWO,QAAQ,GAAGC,IAA5B,CAD4D,CAE5D;;AACC,QAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,IAAR,CAAa,UAAb,EAAyBL,UAAzB,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAER,aAAP;AAAsBS,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACF,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAEhD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACe,GAAR,CAAY,UAAZ,CAAvB;AAEAP,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEP,aAAP;AAAsBQ,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAxC,GAAD,CAAR;AACF,CALK;AAON,OAAO,MAAMG,WAAW,GAAIC,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AAElD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACe,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEN,YAAP;AAAqBO,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAvC,GAAD,CAAR;AACF,CALM;AAOP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAIV,UAAJ,KAAmB,MAAMC,QAAN,IAAkB;AAE5D,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACmB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BV,UAA9B,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEJ,WAAP;AAAoBK,IAAAA,OAAO,EAAEO,QAAQ,CAACE;AAAtC,GAAD,CAAR;AACF,CALM;AAOP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AAEnD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACqB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAvB;AAEAT,EAAAA,QAAQ,CAAC;AAACL,IAAAA,IAAI,EAAEL,aAAP;AAAsBM,IAAAA,OAAO,EAAEa;AAA/B,GAAD,CAAR;AACF,CALM","sourcesContent":["import {\n    SIGN_IN, \n    SIGN_OUT,\n    CREATE_STREAM,\n    FETCH_STREAMS,\n    FETCH_STREAM,\n    DELETE_STREAM,\n    EDIT_STREAM\n\n} from './types';\nimport streams from '../apis/streams';\n\n\nexport const signIn = userId => {\n\n    return {\n        type: SIGN_IN,\n        payload: userId\n    };\n\n};\n\nexport const signOut = () => {\n\n    return {\n        type: SIGN_OUT\n    };\n\n};\n\nexport const createStream = formValues => async (dispatch) => {\n  const {userId} = getState().auth;\n  //console.log(\"extracted user id \"+ userId);\n   const response = await streams.post('/streams', formValues);\n\n   dispatch({type: CREATE_STREAM, payload: response.data});\n};\n\nexport const fetchStreams = () => async dispatch => {\n  \n    const response = await streams.get('/streams');\n \n    dispatch({type: FETCH_STREAMS, payload: response.data});\n };\n\n export const fetchStream = (id) => async dispatch => {\n  \n    const response = await streams.get(`/streams/${id}`);\n \n    dispatch({type: FETCH_STREAM, payload: response.data});\n };\n\n export const editStream = (id,formValues) => async dispatch => {\n  \n    const response = await streams.put(`/streams/${id}`, formValues);\n \n    dispatch({type: EDIT_STREAM, payload: response.data});\n };\n\n export const deleteStream = (id) => async dispatch => {\n  \n    const response = await streams.delete(`/streams/${id}`);\n \n    dispatch({type: DELETE_STREAM, payload: id});\n };"]},"metadata":{},"sourceType":"module"}